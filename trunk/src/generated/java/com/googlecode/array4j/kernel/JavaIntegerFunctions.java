package com.googlecode.array4j.kernel;

import java.nio.ByteBuffer;
import java.nio.IntBuffer;

import com.googlecode.array4j.ArrayFunctions;
import com.googlecode.array4j.ArrayType;
import com.googlecode.array4j.DenseArray;
import com.googlecode.array4j.ufunc.CopySwapNFunction;
import com.googlecode.array4j.ufunc.VectorUnaryFunction;

// TODO this code might be autogenerated at some point

public final class JavaIntegerFunctions implements ArrayFunctions {
    public void fill(final ByteBuffer data, final int length) {
        final IntBuffer buffer = data.asIntBuffer();
        final int start = buffer.get();
        final int delta = buffer.get();
        for (int i = 2; i < length; i++) {
            buffer.put(start + i * delta);
        }
    }

    public double getitemDouble(final ByteBuffer data, final DenseArray arr) {
        throw new UnsupportedOperationException();
    }

    public void setitem(final Object obj, final ByteBuffer data, final DenseArray arr) {
        final IntBuffer buffer = data.asIntBuffer();
        if (obj instanceof Number) {
            buffer.put(((Number) obj).intValue());
        } else {
            throw new UnsupportedOperationException();
        }
    }

    public void add(final ByteBuffer[] bufptr, final int[] dimensions, final int[] steps, final Object funcdata) {
    }

    public void multiply(final ByteBuffer[] bufptr, final int[] dimensions, final int[] steps, final Object funcdata) {
    }

    public void square(final ByteBuffer[] bufptr, final int[] dimensions, final int[] steps, final Object funcdata) {
    }

    public void ldexp(final ByteBuffer[] bufptr, final int[] dimensions, final int[] steps, final Object funcdata) {
    }

    public void sqrt(final ByteBuffer[] bufptr, final int[] dimensions, final int[] steps, final Object funcdata) {
    }

    public void log(final ByteBuffer[] bufptr, final int[] dimensions, final int[] steps, final Object funcdata) {
    }

    public void exp(final ByteBuffer[] bufptr, final int[] dimensions, final int[] steps, final Object funcdata) {
    }

    public VectorUnaryFunction getCastFunc(final ArrayType type) {
        throw new UnsupportedOperationException();
    }

    public CopySwapNFunction getCopySwapN() {
        throw new UnsupportedOperationException();
    }

    public void copySwapN(final ByteBuffer buf0, final int stride0, final ByteBuffer buf1, final int stride1,
            final int n, final boolean swap, final DenseArray dest) {
        throw new UnsupportedOperationException();
    }
}
